generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  userName String
  homePage String?
  pass     String
  face     Int?
  auth     Auth?
  post     Posts[]
  commit   Commit[]
}

model Auth {
  id           Int       @id @default(autoincrement())
  action_token String    @unique
  refreshToken String    @unique
  accessToken  String    @unique
  createdAt    DateTime  @default(now())
  upadateAt    DateTime?
  deleteAt     DateTime?
  user         Customer  @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId       Int       @unique
}

model Posts {
  id           Int      @id @default(autoincrement())
  checked      Boolean  @default(false)
  text         String
  editable     Boolean?
  attachedFile String?
  userId       Int
  createdAt    DateTime @default(now())

  user    Customer @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  commits Commit[]
}

model Commit {
  id                Int      @id @default(autoincrement())
  checkedCom        Boolean?
  text              String
  attachedFile      String?
  userId            Int
  postId            Int
  childrenCommentId Int?

  user     Customer @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  post     Posts    @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  parent   Commit?  @relation("сommitToParent", fields: [childrenCommentId], references: [id])
  children Commit[] @relation("сommitToParent")
}
